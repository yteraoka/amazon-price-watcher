name: collect data and deploy

on:
  pull_request:
  workflow_dispatch:
    inputs:
      disable_collect:
        description: 'データ取得しないで evidence の更新だけを行う'
        type: choice
        default: 'true'
        options:
          - 'true'
          - 'false'
  schedule:
    - cron: '10 0/8 * * *'

permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    #runs-on: self-hosted
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - run: pip install -r playwright/requirements.txt

      - run: playwright install --with-deps chromium

      - name: get item price
        id: get-item-price
        run: |
          if [ "${DISABLE_COLLECT}" = "true" ]; then
            exit 0
          fi
          set -o pipefail
          output_file=$(date --utc +data/%Y/%m/%d/%Y%m%d-%H%M%S).json
          install -d $(dirname ${output_file})
          #python get-items.py evidence/sources/local/items.csv | tee ${output_file}
          #python bs/price.py evidence/sources/local/items.csv > ${output_file}
          python playwright/scrape.py evidence/sources/local/items.csv > ${output_file}
          echo "output_file=${output_file}" >> $GITHUB_OUTPUT
        env:
          HTTP_PROXY: ${{ secrets.HTTP_PROXY }}
          PROXY_USERNAME: ${{ secrets.PROXY_USERNAME }}
          PROXY_PASSWORD: ${{ secrets.PROXY_PASSWORD }}
        #  HTTPS_PROXY: ${{ secrets.HTTPS_PROXY }}
        #  KEY: ${{ secrets.AMAZON_PA_API_KEY }}
        #  SECRET: ${{ secrets.AMAZON_PA_API_SECRET }}
        #  TAG: ${{ secrets.AMAZON_PA_API_TAG }}
        #  COUNTRY: ${{ vars.AMAZON_PA_API_COUNTRY }}
        #  DISABLE_COLLECT: ${{ inputs.disable_collect }}

      - name: push new data
        run: |
          if [ "${DISABLE_COLLECT}" = "true" ]; then
            exit 0
          fi
          git config user.email "${GIT_EMAIL}"
          git config user.name "GitHub Actions"
          git add data
          git commit -m "add ${OUTPUT_FILE}"
          git push
        env:
          OUTPUT_FILE: ${{ steps.get-item-price.outputs.output_file }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
          DISABLE_COLLECT: ${{ inputs.disable_collect }}
        if: github.event_name != 'pull_request'

      - name: notify
        run: |
          ls data/*/*/*/* | tail -n 2 | xargs python diff.py
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: json2csv
        run: |
          bash json2csv.sh

      - uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions

      - run: npm ci
        working-directory: evidence

      - run: npm run sources
        working-directory: evidence

      - run: npm run build
        working-directory: evidence

      - run: chmod -R go+r build
        working-directory: evidence

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./evidence/build
        if: github.event_name != 'pull_request'

  # Deployment job
  deploy:
    if: github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 600000
